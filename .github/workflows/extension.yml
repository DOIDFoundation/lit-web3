name: Extension Release

on:
  push:
    tags:
      - '@lit-web3/extension@*'

jobs:
  build:
    name: release
    runs-on: ubuntu-latest
    env:
      RELEASE_FILE: 'DOID'
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ^8
          run_install: false

      - name: Set
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          echo "TAG_VER=$(echo ${GITHUB_REF#refs/*/} | awk -F @ '{print $3}')" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Prepare for bundle
        run: |
          pnpm i
          echo "RELEASE_FILENAME=${{env.RELEASE_FILE}}.${{env.TAG_VER}}" >> $GITHUB_ENV

      - name: Make bundle
        run: |
          RELEASE_FILE="${{env.RELEASE_FILENAME}}" pnpm extension bundle

      - name: Create Release for Tag
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{github.ref}}
          prerelease: true
          body: |
            Please refer to [CHANGELOG.md](https://github.com/DOIDFoundation/lit-web3/blob/main/apps/extension/CHANGELOG.md)

      - name: Upload zip artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: ./apps/extension/${{ env.RELEASE_FILENAME }}.zip
          asset_name: ${{ env.RELEASE_FILENAME }}.zip
          asset_content_type: application/gzip

      - name: Upload crx artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: ./apps/extension/${{ env.RELEASE_FILENAME }}.crx
          asset_name: ${{ env.RELEASE_FILENAME }}.crx
          asset_content_type: application/x-chrome-extension
